###### Static Service Properties ######
appName=FndWebServer
appVersion=x.x.x
httpPort=8080
jmxPort=9000
homeDir=..
memorySize=1024m

###### Mutable Environment properties #####
appInstance=1
environment=dev
logDir=../../logs
logLevel=INFO
#############################################
# URL/Web Path Properties
#############################################
#Note that port for http and url base do *NOT* have to match. For example, if the system was exposed with DNS name meh.active.com
#on port 80, and then load balanced to this node on port 8086 then you would set:
workshop.service.url.base=http://localhost:${httpPort}
workshop.service.url.workshopWsdl=${workshop.service.url.base}/soap/workshop-service?wsdl
workshop.service.url.pluginWsdl=${workshop.service.url.base}/soap/plugin-service?wsdl
workshop.service.url.path.appdef=/%1s
workshop.service.url.path.default=/default
workshop.service.url.jsp.badAppJsp=/badApp.jsp
workshop.service.url.jsp.flexAppJsp=/flexHost.jsp
workshop.service.url.jsp.default=/default.jsp
workshop.service.url.amfListener=/flex-admin/messagebroker/amf
workshop.service.url.path.swfFilePath=/flex

workshop.service.url.applicationPattern=${workshop.service.url.base}/%1s

url.formsBase=http://forms-vip.int.aw.dev.activenetwork.com
url.securityBase=http://security-vip.int.aw.dev.activenetwork.com
url.userBase=http://user-vip.int.aw.dev.activenetwork.com
url.agencyManagementBase=http://agency-vip.int.aw.dev.activenetwork.com
url.eventManagementBase=http://event-vip.int.aw.dev.activenetwork.com

url.emailBase=http://email-vip.int.aw.dev.activenetwork.com
url.givingManagementBase=http://giving-vip.int.aw.dev.activenetwork.com
url.ledgerBase=http://ledger-vip.int.aw.dev.activenetwork.com
url.membershipManagementBase=http://member-vip.int.aw.dev.activenetwork.com
url.notificationBase=http://notification-vip.int.aw.dev.activenetwork.com
url.orderManagementBase=http://order-vip.int.aw.dev.activenetwork.com
url.reportBase=http://report-vip.int.aw.dev.activenetwork.com
url.waiverBase=http://waiver-vip.int.aw.dev.activenetwork.com
url.communicationsManagementBase=http://communications-vip.int.aw.dev.activenetwork.com
url.offerBase=https://offer-vip.int.aw.dev.activenetwork.com
url.passportBase=https://passport-vip.int.aw.dev.activenetwork.com
url.enduranceManagementBase=http://endurance-vip.int.aw.dev.activenetwork.com
url.activePassportBase=https://passportui-vip.int.aw.dev.activenetwork.com
url.enduranceReportingBase=http://endrreport-vip.int.aw.dev.activenetwork.com
url.volunteerManagementBase=http://vmod-vip.int.aw.dev.activenetwork.com
#url.volunteerManagementBase=http://localhost.dev.activenetwork.com:8811

url.accountService=${url.userBase}/foundation-user-service/account/v1/internal/soap
url.accountService.legacy=${url.userBase}/foundation-user-service/soap/account-service
url.agencyManagementService=${url.agencyManagementBase}/agency-management-service/agency-management/v1/internal/soap
url.agencyManagementService.legacy=${url.agencyManagementBase}/agency-management-service/soap/agency-management-service
url.contractService=${url.agencyManagementBase}/agency-management-service/soap/contract-service
url.emailService=${url.emailBase}/foundation-email-service/soap/foundation-email-service
url.fileService=${url.emailBase}/foundation-email-service/file/v1/internal/soap

url.formsService=${url.formsBase}/forms-service/soap/forms-service
url.givingManagementService=${url.givingManagementBase}/giving-management-service/soap/giving-management-service
url.ledgerService=${url.ledgerBase}/ledger-service/soap/ledger-service
url.membershipManagementService=${url.membershipManagementBase}/membership-management-service/membership/v1/internal/soap
url.notificationService=${url.notificationBase}/notification-service/soap/notification-service
url.offerService=${url.offerBase}/offer-service/soap/jaxb-offer-service
url.orderManagementService=${url.orderManagementBase}/order-management-service/soap/order-management-service
url.paymentManagementService=${url.orderManagementBase}/order-management-service/soap/payment-management-service
url.userService=${url.userBase}/foundation-user-service/user/v2/soap
url.peopleService=${url.userBase}/foundation-user-service/people/v1/internal/soap
url.peopleService.legacy=${url.userBase}/foundation-user-service/soap/people-service
url.productService=${url.orderManagementBase}/order-management-service/soap/product-service
url.reportService=${url.reportBase}/report-service/soap/report-service
url.waiverService=${url.waiverBase}/waiver-service/soap/waiver-service
url.securityService=${url.securityBase}/security-service/security/v1/internal/soap
url.securityManagementService=${url.securityBase}/security-service/security-management/v1/internal/soap
url.communicationsManagementService=${url.communicationsManagementBase}/comms-mgmt-service/soap/communications-management-service
url.passportLoginService=${url.passportBase}/passport-service/passport-login/v1/internal/soap

#CAS URLs (see http://www.ja-sig.org/products/cas/overview/protocol/index.html)
workshop.service.url.baseCAS=http://10.50.8.102:8080
workshop.loginpage.url=http://localhost:8080/login
workshop.service.url.loginPattern=${workshop.loginpage.url}?service=%1s
workshop.service.url.logoutPattern=${workshop.loginpage.url}?logout=true
workshop.service.url.validatePattern=${workshop.service.url.baseCAS}/serviceValidate?service=%1s&ticket=%2s
workshop.service.url.acquireTicketPattern=${workshop.service.url.baseCAS}/login?service=%1s

#SSL Detection when behind an SSL-decryptor
#If this header is found non-null/empty, assume request was once SSL
workshop.service.ssl.indicator.header=SSLSessionID

##############################################
# Cache Properties
##############################################
workshop.service.applicationsToPrecache=SuperAgencyEvents,TheActiveNetwork

#############################################
# Timeouts
#############################################
workshop.service.timeout.validateTicket = 5000

#############################################
# Authentication Properties
#############################################
workshop.service.authentication.ticketValidateSuccessToken=<cas:authenticationSuccess>
workshop.service.authentication.enableTicketValidate=true
#############################################
# Image Upload Servlet properties
#############################################
imageUploadServlet.photoService.url=http://photoqa-services.active.com/axis2/services/ActivePhotosService?wsdl

aes-128-key=73,-46,97,-11,77,125,21,91,74,-62,90,124,-112,125,-112,103

service.proxy=http://localhost:8080/management-service
service.proxy1=http://localhost:8080/service1
service.proxy2=http://localhost:8080/service2

